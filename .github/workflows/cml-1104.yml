name: cml#1104 runner `--cloud-metadata` parsing
on:
  schedule:
    - cron: '45 14 * * 1' # Mondays 1445 UTC
  workflow_dispatch:
    inputs:
      branch:
        description: 'branch to test'
        required: false
        type: string
env:
  TEST_CML_BRANCH: ${{ inputs.branch || 'master' }}
permissions:
  id-token: write
  contents: write
  pull-requests: write
jobs:
  metadata:
    environment: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Test a CML Branch
        if: ${{ env.TEST_CML_VERSION != null || github.event_name != 'schedule' }}
        run: |
          npm install -g canvas@2 vega@5 vega-cli@5 vega-lite@5 github:iterative/cml#${{ env.TEST_CML_BRANCH }}
      - name: Standard CML setup
        if: ${{ env.TEST_CML_VERSION == null || github.event_name == 'schedule' }}
        uses: iterative/setup-cml@v1
        with:
          version: ${{ env.TEST_CML_VERSION || 'latest' }}
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::342840881361:role/SandboxUser
          aws-region: us-west-1
      - name: Create Runner
        env:
          REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
        run: |
          cml runner --cloud-metadata="actions_link=https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}" --cloud-startup-script=$(echo 'echo "$(curl https://github.com/'"$GITHUB_ACTOR"'.keys)" >> /home/ubuntu/.ssh/authorized_keys' | base64 -w 0) --labels=metadata-test --cloud=aws --cloud-region=us-west-1 --cloud-metadata="condition one=KeyHasASpace" --cloud-metadata='"condition two"="KeyAndValueAreWrappedWithQuotes"' --cloud-metadata='"condition three"=KeyIsWrappedValueIsNot' --cloud-type=t3.small
  test-metadata:
    needs: [metadata]
    runs-on: [self-hosted, metadata-test]
    environment: test
    steps:
      - uses: actions/checkout@v3
      - name: CML Version Test
        run: |
          which cml
          cml --version
  inspect:
    needs: [test-metadata]
    runs-on: ubuntu-latest
    environment: test
    steps:
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::342840881361:role/SandboxUser
          aws-region: us-west-1
      - name: Check Instance tags
        run: |
          aws ec2 describe-instances --filters Name=tag:Name,Values=cml-* --region us-west-1 | jq '.Reservations[].Instances[] | .Tags'
