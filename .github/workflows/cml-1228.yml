name: cml#1228 comment --target=
on:
  workflow_dispatch:
  push:
    branches:
      - comment-targets
jobs:
  target-pr:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Using CML Branch feature-comment-target
        run: |
          npm install -g canvas@2 vega@5 vega-cli@5 vega-lite@5 github:iterative/cml#feature-comment-target
      - run: echo "make pr"
      - run: echo "make create comment"
      - run: echo "check for comment"
      - run: echo "clean up"
  target-commit:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Using CML Branch feature-comment-target
        run: |
          npm install -g canvas@2 vega@5 vega-cli@5 vega-lite@5 github:iterative/cml#feature-comment-target
      - name: Comment
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo '### This is a commit comment.' > ./comment.md
          echo ${GITHUB_JOB} >> ./comment.md
          echo "${{ github.event.action }}" >> ./comment.md
          cml comment create --target=commit ./comment.md
      - name: Check
        id: check
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          api_response=$(curl -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/commits/${{ github.sha }}/comments")
          num_comments=$(echo "$api_response" | jq '. | length') # number of comments
          test "$num_comments" = 1
          comment_id=$(echo "$api_response" | jq '.[].id') # comment ID
          echo "comment_id=$comment_id" >> $GITHUB_OUTPUT
      - name: Clean up
        id: delete
        run: |
          curl -X DELETE -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/comments/${{ steps.check.outputs.comment_id }}"
  target-issue:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Using CML Branch feature-comment-target
        run: |
          npm install -g canvas@2 vega@5 vega-cli@5 vega-lite@5 github:iterative/cml#feature-comment-target
      - name: Create Issue
        id: issue
        uses: dacbd/create-issue-action@v1
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          title: Target for comment testing
      - name: Create Comment
        env:
          REPO_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          echo '### This is a issue comment.' > ./comment.md
          echo ${GITHUB_JOB} >> ./comment.md
          echo "${{ github.event.action }}" >> ./comment.md
          cml comment create --target=issue#${{ steps.issue.outputs.number }} ./comment.md
      - name: Check Comment
        id: check
        run: |
          api_response=$(curl -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/issues/${{ steps.issue.outputs.number }}/comments")
          num_comments=$(echo "$api_response" | jq '. | length') # number of comments
          test "$num_comments" = 1
          comment_id=$(echo "$api_response" | jq '.[].id') # comment ID
          echo "comment_id=$comment_id" >> $GITHUB_OUTPUT
      - name: Clean Up
        env:
          GH_TOKEN: ${{ secrets.REPO_TOKEN }}
        run: |
          curl -X DELETE -H "Accept: application/vnd.github+json" -H "Authorization: Bearer ${{ secrets.GITHUB_TOKEN }}" "https://api.github.com/repos/${{ github.repository }}/issues/comments/${{ steps.check.outputs.comment_id }}"
          gh issue delete ${{ steps.issue.outputs.number }} --confirm
  target-neg:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Using CML Branch feature-comment-target
        run: |
          npm install -g canvas@2 vega@5 vega-cli@5 vega-lite@5 github:iterative/cml#feature-comment-target
      - run: echo "todo"
