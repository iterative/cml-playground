name: cml gcp name
on:
  schedule:
    - cron: '45 14 * * 1' # Mondays 1445 UTC
  push:
    branches:
      - gcp-instance-name
  workflow_dispatch:
    inputs:
      branch:
        description: 'branch to test'
        required: false
        type: string
env:
  TEST_CML_BRANCH: ${{ inputs.branch || 'master' }}
permissions:
  id-token: write
  contents: write
  pull-requests: write
jobs:
  gcp-name:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Clone CML
        uses: actions/checkout@v3
        with:
          repository: iterative/cml
          ref: master
          path: cml
      - name: CML deps
        run: |
          pushd cml
          npm ci
          popd
      - name: Hack cml for local tpi
        run: |
          pushd cml
          sed -i "s/source: 'iterative\/iterative',/source: 'github.com\/iterative\/iterative'/g" src/terraform.js
          sed -i "/...(tpiVersion && { version: tpiVersion })/d" src/terraform.js
          popd
      - name: Install CML
        run: |
          pushd cml
          npm install -g .
          popd
      - name: Install misc CML tooling
        run: |
          npm install -g canvas@2 vega@5 vega-cli@5 vega-lite@5
      - name: Setup Go
        uses: actions/setup-go@v3
        with:
          go-version: ^1.18.0
      - name: Clone TPI
        uses: actions/checkout@v3
        with:
          repository: iterative/terraform-provider-iterative
          ref: gcp-Name-alias
          path: tpi
      - name: Build/Install TPI
        run: |
          pushd tpi
          make build
          make install-tpi
      - name: 'Authenticate to Google Cloud'
        uses: 'google-github-actions/auth@v0'
        with:
          credentials_json: ${{ secrets.GCP_CML_RUNNER_KEY }}
      - name: Create Runner
        env:
          REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
        run: |
          cml runner --cloud-startup-script=$(echo 'echo "$(curl https://github.com/'"$GITHUB_ACTOR"'.keys)" >> /home/ubuntu/.ssh/authorized_keys' | base64 -w 0) --single --labels=gcp-name-test --cloud=gcp --cloud-region=us-west --cloud-metadata="Name=test3" --cloud-type=c2-standard-4
  test-gcp-name:
    needs: [gcp-name]
    runs-on: [self-hosted, gcp-name-test]
    steps:
      - uses: actions/checkout@v3
      - name: CML Version Test
        run: |
          which cml
          cml --version
      - run: sleep 180
