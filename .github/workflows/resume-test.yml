name: resume with git pull example
on:
  workflow_dispatch:
    inputs:
      stage:
        description: "start workflow from:"
        type: choice
        options:
          - start
          - prepare
          - train
          - inference
permissions:
  id-token: write
  contents: write
  pull-requests: write
jobs:
  resume:
    environment: test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Test a CML Branch
        if: ${{ env.TEST_CML_BRANCH }}
        run: |
          npm install -g canvas@2 vega@5 vega-cli@5 vega-lite@5 github:iterative/cml#${{ env.TEST_CML_BRANCH }}
      - name: Standard CML setup
        if: ${{ !env.TEST_CML_BRANCH }}
        uses: iterative/setup-cml@v1
        with:
          version: ${{ env.TEST_CML_VERSION || 'latest' }}
      - uses: aws-actions/configure-aws-credentials@v1
        with:
          role-to-assume: arn:aws:iam::342840881361:role/SandboxUser
          aws-region: us-east-1
      - name: Create Runner
        env:
          REPO_TOKEN: ${{ secrets.REPO_TOKEN }}
        run: |
          cml runner --labels=resume-test --cloud=aws --cloud-region=us-west --cloud-type=t3.small
  test-resume:
    needs: [resume]
    runs-on: [self-hosted, resume-test]
    environment: test
    steps:
      - uses: actions/checkout@v3
      - name: CML Version Test
        run: |
          which cml
          cml --version
      - name: flow control
        id: control
        run: |
          git pull
          control_str=""
          if [ "${{ github.event_name }}" == "workflow_dispatch" ] then;
            control_str="${{ inputs.stage }}"
          else
            control_str=$(git show -s --format=%s HEAD)
          fi
          case "$control_str" in
            prepare)
              echo "::set-output name=stage::1"
              ;;
            train)
              echo "::set-output name=stage::2"
              ;;
            inference)
              echo "::set-output name=stage::3"
              ;;
            *)
              echo "::set-output name=stage::0"
              ;;
          esac
      - name: prepare stage
        if: steps.control.outputs.stage < 1
        run: |
          echo "prepare commands"
          sleep 120
          echo "prepare done; git checkpoint"
          git commit --allow-empty -m "prepare"
          git push
      - name: train stage
        if: steps.control.outputs.stage < 2
        run: |
          echo "train commands"
          sleep 120
          echo "train done; git checkpoint"
          git commit --allow-empty -m "train"
          git push
      - name: inference stage
        if: steps.control.outputs.stage < 3
        run: |
          echo "inference commands"
          sleep 120
          echo "inference done; git checkpoint"
          git commit --allow-empty -m "inference"
          git push
      - name: Complete
        run: |
          echo "report" >> report.md
          cml send-comment report.md
