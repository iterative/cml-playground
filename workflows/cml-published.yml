name: Receive CML Publish Event
on:
  repository_dispatch:
    types:
      - new-cml
      - pr

jobs:
  cml-pr:
    runs-on: ubuntu-latest
    steps:
      - name: TODO
        run: |
          echo "${{ github.event.event_type }}"
          echo "${{ github.event.client_playload.branch }}"
  cml-published:
    if: ${{ github.event.event_type == 'new-cml' }}
    runs-on: ubuntu-latest
    strategy:
      matrix:
        distribution: [binary, image, package]
        include:
          - distribution: binary
            version: "curl --location https://github.com/iterative/cml/releases/latest/download/cml-linux-x64 --output cml && chmod a+x cml && ./cml --version"
          - distribution: container
            version: docker run --interactive ghcr.io/iterative/cml --version
          - distribution: package
            version: npx --yes @dvcorg/cml --version
    steps:
      - name: Check release artifacts
        run: |
          version="v$(${{ matrix.version }})"
          if [[ "$version" != "$EXPECTED" ]]; then
            echo "${{ matrix.distribution }} version mismatch: expected $EXPECTED, got $version"
            exit 1
          fi
        env:
          EXPECTED: ${{ github.event.client_payload.tag }}
  cml-published-failure:
    needs: cml-published
    if: failure()
    runs-on: ubuntu-latest
    steps:
      - run: |
          echo "Release of <https://github.com/iterative/cml|iterative/cml> <$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID|*failed*>!" |
          jq --raw-input {text:.} | curl --header content-type:application/json --data @- "$SLACK_WEBHOOK"
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}


